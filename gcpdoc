gcloud init
gcloud config set project  structhub-412620
gcloud config set compute/region us-west4
gcloud config set compute/zone YOUR_ZONE

# FOr container registry
gsutil mb -l us-east4 gs://artifacts.structhub-412620.appspot.com

gcloud auth configure-docker us-central1-docker.pkg.dev

 docker build --build-arg="TIKA_VERSION=2.9.1" --progress=plain -t us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-be:1.0.0 -f dockerfile-tika-server .
 docker build --progress=plain -t us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-fe:1.0.0 -f .\dockerfile-7.6 .

docker push  us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-be:1.0.0
docker push  us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-fe:1.0.0
# Replace the placeholders with your values
regions=

# Set your project ID and VPC name
PROJECT_ID="structhub-412620"
VPC_NAME="xtracat-vpc-prod"

# Create a VPC network
gcloud compute networks create $VPC_NAME --project=$PROJECT_ID

REGIONS=("us-central1" "europe-west2" "asia-northeast1", "asia-south1","europe-west2","northamerica-northeast2", "us-east4") 

for region in "${REGIONS[@]}"; do
    # Set subnetwork name
    SUBNET_NAME="subnet-$region"

    # Create subnetwork in the specified region
    gcloud compute networks subnets create $SUBNET_NAME \
        --network=$VPC_NAME \
        --project=$PROJECT_ID \
        --region=$region \
        --range="10.1.0.0/16"  # Replace with an appropriate IP range
done


IMAGE="us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-be:1.0.0"
BACKEND_SERVICE_NAME="xtract-be-backend-service"
HEALTH_CHECK_NAME="xtract-be-health-check"

for region in "${REGIONS[@]}"; do
    gcloud compute instances create-with-container xtract-be-instance-$region \
        --container-image=$IMAGE \
        --zone=$region-a \
        --project=$PROJECT_ID \
        --subnet=subnet-$region

    # Add logic to wait for the instance to be ready

    # Create a health check for xtract-be
    gcloud compute health-checks create http $HEALTH_CHECK_NAME \
        --project=$PROJECT_ID \
        --port=9998

    # Create a backend service for xtract-be
    gcloud compute backend-services create $BACKEND_SERVICE_NAME \
        --project=$PROJECT_ID \
        --health-checks=$HEALTH_CHECK_NAME \
        --protocol=HTTP \
        --global

    # Add xtract-be instances to the backend service
    gcloud compute backend-services add-backend $BACKEND_SERVICE_NAME \
        --project=$PROJECT_ID \
        --instance-group=xtract-be-instance-group-$region \
        --instance-group-zone=$region-a \
        --global
done

IMAGE="us-central1-docker.pkg.dev/structhub-412620/xtract/xtract-fe:1.0.0"
FRONTEND_SERVICE_NAME="xtract-fe-frontend-service"

for region in "${REGIONS[@]}"; do
    gcloud compute instances create-with-container xtract-fe-instance-$region \
        --container-image=$IMAGE \
        --zone=$region-a \
        --project=$PROJECT_ID \
        --subnet=subnet-$region

    # Add logic to wait for the instance to be ready
done

# Set SERVER_URL environment variable for xtract-fe
SERVER_URL="xtract-be-backend-service.global"
for region in "${REGIONS[@]}"; do
    gcloud compute ssh xtract-fe-instance-$region \
        --zone=$region-a \
        --project=$PROJECT_ID \
        --command="echo 'export SERVER_URL=$SERVER_URL' >> /etc/environment"
done

# Create a frontend service for xtract-fe
gcloud compute backend-services create $FRONTEND_SERVICE_NAME \
    --project=$PROJECT_ID \
    --global

# Add xtract-fe instances to the frontend service
for region in "${REGIONS[@]}"; do
    gcloud compute backend-services add-backend $FRONTEND_SERVICE_NAME \
        --project=$PROJECT_ID \
        --instance-group=xtract-fe-instance-group-$region \
        --instance-group-zone=$region-a \
        --global
done
